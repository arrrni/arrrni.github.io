{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","location","title","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","frontmatter","className","class","date","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery","Bio"],"mappings":"4OAQMA,4FACJC,kBACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAC5BK,EAAkBP,EAAKQ,QAHtBC,EAIoBR,KAAKC,MAAMQ,YAA9BC,EAJDF,EAICE,SAAUC,EAJXH,EAIWG,KAElB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUC,MAAOb,GAC5CQ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASjB,IACvCW,MAAUlB,EAAKyB,YAAYP,MAAtB,MAAiCb,IAExCQ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BACfb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,SAAS1B,EAAKyB,YAAYP,OACxCL,EAAAC,EAAAC,cAAA,OAAKY,MAAM,8BACTd,EAAAC,EAAAC,cAAA,QAAMY,MAAM,0BAAZ,WACAd,EAAAC,EAAAC,cAAA,QAAMY,MAAM,kBAAkB3B,EAAKyB,YAAYG,QAGjDf,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UAAUG,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QACjElB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MAEAnB,EAAAC,EAAAC,cAAA,MACEkB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXzB,EAAAC,EAAAC,cAAA,UAEIJ,GACAE,EAAAC,EAAAC,cAACwB,EAAA,KAAD,CAAMC,GAAI7B,EAAS8B,OAAOC,KAAMC,IAAI,QAApC,KACKhC,EAASc,YAAYP,QAI9BL,EAAAC,EAAAC,cAAA,UAEIH,GACAC,EAAAC,EAAAC,cAACwB,EAAA,KAAD,CAAMC,GAAI5B,EAAK6B,OAAOC,KAAMC,IAAI,QAC7B/B,EAAKa,YAAYP,MADpB,aA7CiB0B,IAAMC,WAwDtB/C,YAER,IAAMgD,EAAS,mFChEhBC,4FACJhD,kBACE,OACEc,EAAAC,EAAAC,cAAA,oBAHY6B,IAAMC,WAQTE","file":"component---src-templates-blog-post-js-247e90c2aa9d95319c77.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link,graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <div className=\"content has-text-centered\">\n        <h1 className=\"title\">{post.frontmatter.title}</h1>\n        <div class=\"tags has-addons level-item\">\n          <span class=\"tag is-rounded is-info\">@arrrni</span>\n          <span class=\"tag is-rounded\">{post.frontmatter.date}</span>\n        </div>\n        </div>\n        <div className=\"content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr/>\n        <Bio />\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {\n              previous &&\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            }\n          </li>\n          <li>\n            {\n              next &&\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            }\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from 'react'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div>.</div>\n    )\n  }\n}\n\nexport default Bio\n"],"sourceRoot":""}